services:
  postgres:
    container_name: "BounceMonitor.Postgres"
    image: "postgres:16"
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=Password12!"
      - "POSTGRES_DB=BounceMonitor"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 10
  
  jobservice:
    restart: on-failure
    container_name: "BounceMonitor.Service"
    image: bouncemonitor/service
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./src/BounceMonitor.Service/Dockerfile
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - CONNECTIONSTRINGS__BOUNCEMONITOR=Host=postgres;port=5432;Username=postgres;Password=Password12!;database=BounceMonitor;
      - TRANSPORTOPTIONS__ACCESSKEY=
      - TRANSPORTOPTIONS__SECRETKEY=
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=Passw0rd
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_HTTPS_PORT=5001
    volumes:
      - ~/.aspnet/https:/https:ro
